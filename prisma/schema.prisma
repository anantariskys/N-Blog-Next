generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id          String    @id @default(cuid())
  username    String    @unique
  email       String    @unique
  name        String?
  bio         String?
  image       String?
  password    String
  posts       Post[]    @relation("UserPosts")
  comments    Comment[] @relation("UserComments")
  likes       Like[]    @relation("UserLikes")
  followers   Follower[] @relation("UserFollowers")
  following   Follower[] @relation("UserFollowing")

  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Post {
  id          String     @id @default(cuid())
  caption     String?
  image       String
  userId      String
  user        User       @relation(fields: [userId], references: [id], onDelete: Cascade, name: "UserPosts")
  comments    Comment[]
  likes       Like[]
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
}

model Comment {
  id          String     @id @default(cuid())
  content     String
  postId      String
  userId      String
  user        User       @relation(fields: [userId], references: [id], onDelete: Cascade, name: "UserComments")
  post        Post       @relation(fields: [postId], references: [id], onDelete: Cascade)
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
}

model Like {
  id          String     @id @default(cuid())
  postId      String
  userId      String
  user        User       @relation(fields: [userId], references: [id], onDelete: Cascade, name: "UserLikes")
  post        Post       @relation(fields: [postId], references: [id], onDelete: Cascade)
  createdAt   DateTime   @default(now())
}

model Follower {
  id            String   @id @default(cuid())
  followerId    String
  followingId   String
  follower      User     @relation("UserFollowers", fields: [followerId], references: [id], onDelete: Cascade)
  following     User     @relation("UserFollowing", fields: [followingId], references: [id], onDelete: Cascade)
  createdAt     DateTime @default(now())
}
